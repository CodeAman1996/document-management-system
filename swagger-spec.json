{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/documents/upload": {
      "post": {
        "operationId": "DocumentsController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document uploaded successfully."
          },
          "500": {
            "description": "Failed to upload document."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload a new document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/documents": {
      "get": {
        "operationId": "DocumentsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of documents."
          },
          "500": {
            "description": "Failed to fetch documents."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all documents for current user",
        "tags": [
          "Documents"
        ]
      }
    },
    "/documents/{id}": {
      "get": {
        "operationId": "DocumentsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Document ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document found."
          },
          "404": {
            "description": "Document not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a document by ID",
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "operationId": "DocumentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Document ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document updated successfully."
          },
          "500": {
            "description": "Failed to update document."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a document by ID",
        "tags": [
          "Documents"
        ]
      },
      "delete": {
        "operationId": "DocumentsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Document ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully."
          },
          "500": {
            "description": "Failed to delete document."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a document by ID",
        "tags": [
          "Documents"
        ]
      }
    },
    "/documents/user/{userId}": {
      "get": {
        "operationId": "DocumentsController_findDocumentsByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documents fetched successfully."
          },
          "500": {
            "description": "Failed to fetch user documents."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get documents by user ID (admin/viewer)",
        "tags": [
          "Documents"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new user (Admin only)",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Getting All Users Data."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all users data",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/register": {
      "post": {
        "operationId": "UsersController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user by ID (Admin only)",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details Updated."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update user by ID ",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details Deleted."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete user by ID ",
        "tags": [
          "Users"
        ]
      }
    },
    "/ingestion/trigger": {
      "post": {
        "operationId": "IngestionController_trigger",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerIngestionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Ingestion"
        ]
      }
    },
    "/ingestion/status/{id}": {
      "get": {
        "operationId": "IngestionController_getStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ingestion"
        ]
      }
    }
  },
  "info": {
    "title": "Document Management API",
    "description": "API for managing users, documents, and ingestion",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "UpdateDocumentDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {}
      },
      "RegisterDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "TriggerIngestionDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}